package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.27

import (
	"context"
	"fmt"

	"github.com/kevinmichaelchen/go-gqlgen-deferred-execution-example/internal/server/generated"
	"github.com/kevinmichaelchen/go-gqlgen-deferred-execution-example/internal/server/model"
)

// CreateFoo is the resolver for the createFoo field.
func (r *mutationResolver) CreateFoo(ctx context.Context, input model.CreateFooInput) (*model.Foo, error) {
	fmt.Println("mutationResolver - CreateFoo")

	// We want to defer execution, so we can execute the entire selection set
	// atomically!
	return nil, nil
}

// CreateBar is the resolver for the createBar field.
func (r *mutationResolver) CreateBar(ctx context.Context, input model.CreateBarInput) (*model.Bar, error) {
	fmt.Println("mutationResolver - CreateBar")

	// We want to defer execution, so we can execute the entire selection set
	// atomically!
	return nil, nil
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
